@page "/"
@inject NavigationManager NavManager
@inject AccountStateService AccountState
@inject UserContext UserContext
@using ChatOnline.Services;
@using ChatOnline.Data;
@using System.Text.RegularExpressions;

<PageTitle>chat.online</PageTitle>

@if (!_registered)
{
    <div class="card" style="width: 100vw; margin-top: 1rem;">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-6">
                    <div class="card mb-4">
                        <div class="card-body">
                            <h3 class="card-title" align="center">Registration</h3>
                            <div>
                                <div class="form-group">
                                    <p>
                                    <label for="exampleAvatar">Choose Avatar</label>
                                    <center>
                                        @if (!string.IsNullOrEmpty(_user.Avatar))
                                        {
                                            <img src="@_user.Avatar" alt="Avatar" style="max-width: 150px; max-height: 150px;" />
                                        }
                                    </center>
                                    <select @bind="_user.Avatar" class="form-control" id="exampleAvatar">
                                        <option value="https://animals.pibig.info/uploads/posts/2023-04/1681462268_animals-pibig-info-p-rzhachnie-kotiki-zhivotnie-instagram-28.jpg">Avatar 1</option>
                                        <option value="https://celes.club/uploads/posts/2022-10/1666834141_2-celes-club-p-kotik-v-odeyalke-pinterest-2.jpg">Avatar 2</option>
                                        <option value="https://animals.pibig.info/uploads/posts/2023-04/1681462289_animals-pibig-info-p-rzhachnie-kotiki-zhivotnie-instagram-16.jpg">Avatar 3</option>
                                        <option value="https://www.meme-arsenal.com/memes/d92c38e0bd0d8bfdc2d1b33b263ddd88.jpg">Avatar 4</option>
                                    </select>
                                    </p>
                                </div>
                                <div class="form-group">
                                    <p>
                                    <label for="exampleInputEmail2">Email address</label>
                                    <input @bind="_user.Email" type="email" class="form-control" id="exampleInputEmail2" aria-describedby="emailHelp" placeholder="Email">
                                    @if (_invalidEmail)
                                    {
                                        <div style="color: red;">This field cannot be empty</div>
                                    }
                                    </p>
                                </div>
                                <div class="form-group">
                                    <p>
                                    <label for="exampleInputFullName2">Full Name</label>
                                    <input @bind="_user.FullName" type="text" class="form-control" id="exampleInputFullName" placeholder="Full Name">
                                    @if (_invalidFullname)
                                    {
                                        <div style="color: red;">This field cannot be empty</div>
                                    }
                                    </p>
                                </div>
                                <div class="form-group">
                                    <p>
                                    <label for="exampleInputUsername2">Username</label>
                                    <input @bind="_user.Username" type="text" class="form-control" id="exampleInputUsername" placeholder="Username">
                                    <small id="usernameHelp" class="form-text text-muted">Username must be at least 6 characters long and cannot start with a digit.</small>
                                    @if (_invalidUsername)
                                    {
                                        <div style="color: red;">Invalid username</div>
                                    }
                                    </p>
                                </div>
                                <div class="form-group">
                                    <p>
                                    <label for="exampleInputPassword2">Password</label>
                                    <input @bind="_user.Password" type="password" class="form-control" id="exampleInputPassword2" placeholder="Password">
                                    <small id="usernameHelp" class="form-text text-muted">Password must be at least 6 characters long, contain at least one uppercase letter, one digit, one special character, and cannot contain specific words: talgat, malishka, hochetsdat, praktiku.</small>
                                    @if (_invalidPassword)
                                    {
                                        <div style="color: red;">Invalid password.</div>
                                    }
                                    </p>
                                </div>
                                <div class="form-group">
                                    <p>
                                    <label for="exampleStatus">Choose Status</label>
                                    <select @bind="_user.Status" class="form-control" id="exampleStatus">
                                        <option value="cringe">Cringe</option>
                                        <option value="slayyy">Slayyy</option>
                                        <option value="genius">Genius</option>
                                        <option value="Talgat Ramilevich">Talgat Ramilevich</option>
                                    </select>
                                    </p>
                                </div>
                            </div>
                            <div class="d-flex flex-column">
                                <p>@($"Your Id:{_user.Id}")</p>
                                <button @onclick="UserFieldValid" class="btn btn-primary">Register</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="mt-3 ml-3">
        <h5>Registered Accounts:</h5>
        <ul>
            @foreach (var user in UserContext.GetUsers())
            {
                <li>@user.Username - @user.Password</li>
            }
        </ul>
    </div>
}
else
{
    <div class="card" style="width: 100vw; margin-top: 1rem;">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-6">
                    <div class="card mb-4">
                        <div class="card-body">
                            <h5 class="card-title" align="center">Authorization</h5>
                            <div>
                                <div class="form-group">
                                    <p>
                                    <label for="exampleInputUsername1">Username</label>
                                    <input @bind="_user.Username" type="text" class="form-control" id="exampleInputUsername" placeholder="Username">
                                    <small id="usernameHelp" class="form-text text-muted">Username must be 0-9, A-z.</small>
                                    </p>
                                </div>
                                <div class="form-group">
                                    <p>
                                    <label for="exampleInputPassword1">Password</label>
                                    <input @bind="_user.Password" type="password" class="form-control" id="exampleInputPassword1" placeholder="Password">
                                    </p>
                                </div>
                            </div>
                            <div class="d-flex flex-column">
                                <p>@($"Your Id:{_user.Id}")</p>
                                <button @onclick="Login" href="#" class="btn btn-primary">Login</button>
                                @if (_invalidLogin)
                                {
                                    <div style="color: red;">Invalid username or password</div>
                                }
                                <button @onclick="BackToReg" class="btn btn-link">Register</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="mt-3 ml-3">
        <h5>Registered Accounts:</h5>
        <ul>
            @foreach (var user in UserContext.GetUsers())
            {
                <li>@user.Username - @user.Password</li>
            }
        </ul>
    </div>
}

@code {
    private User _user = new User("", "", "", "", "", "");

    private bool _registered = false;
    private bool _invalidPassword = false;
    private bool _invalidUsername = false;
    private bool _invalidFullname = false;
    private bool _invalidEmail = false;
    private bool _invalidLogin = false;

    public void UserFieldValid()
    {
        _invalidUsername = string.IsNullOrEmpty(_user.Username) || _user.Username.Length < 6 || char.IsDigit(_user.Username[0]);
        _invalidPassword = string.IsNullOrEmpty(_user.Password) || _user.Password.Length < 6;
        _invalidPassword = _invalidPassword || !Regex.IsMatch(_user.Password, @"^(?=.*[A-Z])(?=.*\d)(?=.*[^\da-zA-Z]).{6,}$");
        _invalidPassword = _invalidPassword || !Regex.IsMatch(_user.Password, @"talgat|malishka|hochetsdat|praktiku", RegexOptions.IgnoreCase);
        _invalidFullname = string.IsNullOrEmpty(_user.FullName);
        _invalidEmail = string.IsNullOrEmpty(_user.Email);
        if (!_invalidUsername && !_invalidPassword && !_invalidFullname && !_invalidEmail)
        {
            UserContext.CreateUser(_user.Email, _user.FullName, _user.Password, _user.Username, _user.Status, _user.Avatar);
            _registered = true;
        }
    }

    private void Login()
    {
        if (UserContext.UserExists(_user.Username, _user.Password))
        {
            NavManager.NavigateTo("/chat");
        }
        else
        {
            _invalidLogin = true;
        }
    }

    public void Go2Chat()
    {
        AccountState.Id = _user.Id;
        AccountState.Username = _user.Username;
        AccountState.Status = _user.Status;
        AccountState.Avatar = _user.Avatar;
        NavManager.NavigateTo("/chat");
    }

    private void BackToReg()
    {
        _registered = false;
    }
}